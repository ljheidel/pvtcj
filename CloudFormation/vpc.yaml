AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VpcCidrBlockParameter:
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 172.16.0.0/20
    Description: VPC CIDR Block
  VpcAZs:
    Type: CommandDelimitedList
    Default: us-east-1a,us-east-1b
    Description: AZs (comma delimited...must be exactly two)
Resources:
  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock:
        Ref: VpcCidrBlockParameter
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', !Ref 'AWS::Region' , 'vpc' ]]
  Igw:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', !Ref 'AWS::Region' , 'igw' ]]
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: Vpc
      InternetGatewayId:
        Ref: Igw
  PublicSubnet0:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabiityZone: !Select [ 0, !Ref 'VpcAZs' ]
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt Vpc.CidrBlock, 16, 8 ]]
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', !Select [ 0, !Ref 'VpcAZs' ],  'public_subnet' ]]
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabiityZone: !Select [ 1, !Ref 'VpcAZs' ]
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt 'Vpc.CidrBlock', 16, 8 ]]
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', !Select [ 1, !Ref 'VpcAZs' ],  'public_subnet' ]]
  PrivateSubnet0:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabiityZone: !Select [ 0, !Ref 'VpcAZs' ]
      CidrBlock: !Select [ 8, !Cidr [ !GetAtt 'Vpc.CidrBlock', 16, 8 ]]
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', !Select [ 0, !Ref 'VpcAZs' ],  'private_subnet' ]]
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabiityZone: !Select [ 1, !Ref 'VpcAZs' ]
      CidrBlock: !Select [ 9, !Cidr [ !GetAtt 'Vpc.CidrBlock', 16, 8 ]]
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', !Select [ 1, !Ref 'VpcAZs' ],  'private_subnet' ]]
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', 'private_route_table' ]]
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: Vpc
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref 'AWS::StackName', 'public_route_table' ]]
  PrivateSubnet0RouteAssocation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: 
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet0
  PrivateSubnet1RouteAssocation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: 
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet1
  PublicSubnet0RouteAssocation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: 
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet0
  PublicSubnet1RouteAssocation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: 
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1
